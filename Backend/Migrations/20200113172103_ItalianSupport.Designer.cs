// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Backend.Migrations
{
    [DbContext(typeof(BackendDbContext))]
    [Migration("20200113172103_ItalianSupport")]
    partial class ItalianSupport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Backend.Models.WeddingGuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Attending1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Attending2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Attending3")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("Italian")
                        .HasColumnType("boolean");

                    b.Property<string>("Names")
                        .HasColumnType("text");

                    b.Property<int?>("PlusOneId")
                        .HasColumnType("integer");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ViewedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlusOneId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Backend.Models.WeddingGuest", b =>
                {
                    b.HasOne("Backend.Models.WeddingGuest", "PlusOne")
                        .WithMany()
                        .HasForeignKey("PlusOneId");
                });
#pragma warning restore 612, 618
        }
    }
}
